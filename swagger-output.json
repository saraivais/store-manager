{
  "swagger": "2.0",
  "info": {
    "title": "Store Manager",
    "description": "Store Manager is a RESTful API that simulates a management system for sales in drop shipping format, making it possible to create, read, update and delete (CRUD) both products and sales.",
    "version": "1.0.0"
  },
  "host": "localhost:3000",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/sales/{id}": {
      "get": {
        "summary": "Returns one specific sale based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of sale to use",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
            
          }
        ],
        "responses": {
          "200": {
            "description": "An array of objects containing details of the specific sale",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "date": {
                        "type": "string",
                        "example": "2021-09-09T04:54:29.000Z"
                      },
                      "productId": {
                        "type": "integer",
                        "example": 2
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 2
                      }
                    }
                  }
                }
              }
            }
          },
          "404": {
            "description": "A sale with the inserted ID was not found"
          }
        }
      },
      "delete": {
        "summary": "Deletes one specific sale based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of sale to use",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The sale was successfully deleted"
          },
          "404": {
            "description": "A sale with the inserted ID was not found"
          }
        }
      },
      "put": {
        "summary": "Edits one specific sale based on ID",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "quantity": {
                      "type": "integer",
                      "minimum": 1
                    }
                  }
                }
              }
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of sale to use",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {
          "200": {
            "description": "An array of objects containing edited details of the specific sale",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "saleId": {
                      "type": "integer",
                      "example": "1"
                    },
                    "itemsUpdated": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "integer",
                            "example": 1
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 3
                          }
                        }
                      }
                    }
                  }
                  
                }
              }
            }
          },
          "404": {
            "description": "A sale with the inserted ID was not found"
          }
        }
      }
    },
    "/sales/": {
      "post": {
        "summary": "Creates a sale",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "type": "object",
                  "properties": {
                    "productId": {
                      "type": "integer",
                      "minimum": 1
                    },
                    "quantity": {
                      "type": "integer",
                      "minimum": 1
                    }
                  }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "A sale was created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "example": 3
                    },
                    "itemsSold": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "productId": {
                            "type": "integer",
                            "example": 2
                          },
                          "quantity": {
                            "type": "integer",
                            "example": 12
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Any of the fields are missing"
          },
          "404": {
            "description": "A product was not found in the database"
          },
          "422": {
            "description": "The specified quantity is not valid (negative or null)"
          }
        }
      },
      "get": {
        "summary": "Returns all sales",
        "parameters": [],
        "responses": {
          "200": {
            "description": "An array of objects containing all sales",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "saleId": {
                        "type": "integer",
                        "example": 1
                      },
                      "date": {
                        "type": "string",
                        "example": "2021-09-09T04:54:54.000Z"
                      },
                      "productId": {
                        "type": "integer",
                        "example": 1
                      },
                      "quantity": {
                        "type": "integer",
                        "example": 5
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/products/search": {
      "get": {
        "summary": "Returns products matching a query string",
        "parameters": [
          {
            "name": "q",
            "in": "query",
            "description": "String to search for in product name",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {}
      }
    },
    "/products/{id}": {
      "get": {
        "summary": "Returns one specific product based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to use",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {}
      },
      "put": {
        "summary": "Edits one specific product based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to use",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {}
      },
      "delete": {
        "summary": "Deletes one specific product based on ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "ID of product to use",
            "required": true,
            "schema": {
              "type": "integer",
              "minimum": 1
            }
          }
        ],
        "responses": {}
      }
    },
    "/products/": {
      "get": {
        "summary": "Returns all products",
        "parameters": [],
        "responses": {}
      },
      "post": {
        "summary": "Creates a product",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "responses": {}
      }
    }
  }
}